name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  assemble:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          java-version-file: .java-version
          distribution: jetbrains
          cache: gradle
      - uses: gradle/actions/setup-gradle@v5
      - uses: android-actions/setup-android@v3
      - run: ./gradlew assembleDebug

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          java-version-file: .java-version
          distribution: jetbrains
          cache: gradle
      - uses: gradle/actions/setup-gradle@v5
      - run: ./gradlew testDebug

  instrumented-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - api-level: 36
            target: google_apis_playstore
            arch: x86_64
            profile: pixel_9
    steps:
      - uses: actions/checkout@v5
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - uses: actions/setup-java@v5
        with:
          java-version-file: .java-version
          distribution: jetbrains
          cache: gradle
      - uses: gradle/actions/setup-gradle@v5
      - name: Cache AVD
        uses: actions/cache@v4
        id: cache-avd
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.target }}-${{ matrix.arch }}-${{ matrix.profile }}
      - name: Create AVD
        if: steps.cache-avd.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          # TODO: デバイスを指定する
          # profile: ${{ matrix.profile }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Created AVD"
      - name: Test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          # profile: ${{ matrix.profile }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew :app:connectedDebugAndroidTest # TODO: 他のモジュールでも実行する

  android-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          java-version-file: .java-version
          distribution: jetbrains
          cache: gradle
      - uses: gradle/actions/setup-gradle@v5
      - uses: android-actions/setup-android@v3
      - run: ./gradlew lintDebug

  detekt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          java-version-file: .java-version
          distribution: jetbrains
          cache: gradle
      - uses: gradle/actions/setup-gradle@v5
      - run: ./gradlew detekt

  submit-dependency:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          java-version-file: .java-version
          distribution: jetbrains
          cache: gradle
      - uses: gradle/actions/setup-gradle@v5
      - uses: gradle/actions/dependency-submission@v5

  validate-gradle-wrapper:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: gradle/actions/wrapper-validation@v5
